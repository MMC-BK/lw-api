// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// StatusDetails status details
//
// swagger:model StatusDetails
type StatusDetails struct {

	// parameters
	Parameters map[string]string `json:"Parameters,omitempty"`

	// reason
	Reason string `json:"Reason,omitempty"`

	// state
	// Enum: ["AVAILABLE","LOCKED_BASIC","LOCKED_FULL","MAINTENANCE"]
	State string `json:"State,omitempty"`
}

// Validate validates this status details
func (m *StatusDetails) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateState(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var statusDetailsTypeStatePropEnum []any

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["AVAILABLE","LOCKED_BASIC","LOCKED_FULL","MAINTENANCE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		statusDetailsTypeStatePropEnum = append(statusDetailsTypeStatePropEnum, v)
	}
}

const (

	// StatusDetailsStateAVAILABLE captures enum value "AVAILABLE"
	StatusDetailsStateAVAILABLE string = "AVAILABLE"

	// StatusDetailsStateLOCKEDBASIC captures enum value "LOCKED_BASIC"
	StatusDetailsStateLOCKEDBASIC string = "LOCKED_BASIC"

	// StatusDetailsStateLOCKEDFULL captures enum value "LOCKED_FULL"
	StatusDetailsStateLOCKEDFULL string = "LOCKED_FULL"

	// StatusDetailsStateMAINTENANCE captures enum value "MAINTENANCE"
	StatusDetailsStateMAINTENANCE string = "MAINTENANCE"
)

// prop value enum
func (m *StatusDetails) validateStateEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, statusDetailsTypeStatePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *StatusDetails) validateState(formats strfmt.Registry) error {
	if swag.IsZero(m.State) { // not required
		return nil
	}

	// value enum
	if err := m.validateStateEnum("State", "body", m.State); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this status details based on context it is used
func (m *StatusDetails) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *StatusDetails) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *StatusDetails) UnmarshalBinary(b []byte) error {
	var res StatusDetails
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
