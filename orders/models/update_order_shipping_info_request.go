// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UpdateOrderShippingInfoRequest update order shipping info request
//
// swagger:model UpdateOrderShippingInfoRequest
type UpdateOrderShippingInfoRequest struct {

	// If order is processed
	ItemWeight float64 `json:"ItemWeight,omitempty"`

	// If there is an adjustment to shipping cost was made
	ManualAdjust bool `json:"ManualAdjust,omitempty"`

	// Order postage cost
	PostageCost float64 `json:"PostageCost,omitempty"`

	// Postal service ID
	// Example: 00000000-0000-0000-0000-000000000000
	// Format: uuid
	PostalServiceID strfmt.UUID `json:"PostalServiceId,omitempty"`

	// Order total weight
	TotalWeight float64 `json:"TotalWeight,omitempty"`

	// Order tracking number provided by courier
	TrackingNumber string `json:"TrackingNumber,omitempty"`
}

// Validate validates this update order shipping info request
func (m *UpdateOrderShippingInfoRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePostalServiceID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UpdateOrderShippingInfoRequest) validatePostalServiceID(formats strfmt.Registry) error {
	if swag.IsZero(m.PostalServiceID) { // not required
		return nil
	}

	if err := validate.FormatOf("PostalServiceId", "body", "uuid", m.PostalServiceID.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this update order shipping info request based on context it is used
func (m *UpdateOrderShippingInfoRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UpdateOrderShippingInfoRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UpdateOrderShippingInfoRequest) UnmarshalBinary(b []byte) error {
	var res UpdateOrderShippingInfoRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
