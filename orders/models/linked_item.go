// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// LinkedItem linked item
//
// swagger:model LinkedItem
type LinkedItem struct {

	// Product title
	ItemName string `json:"ItemName,omitempty"`

	// Product SKU
	ItemNumber string `json:"ItemNumber,omitempty"`

	// Country ID
	// Example: 00000000-0000-0000-0000-000000000000
	// Format: uuid
	PkStockID strfmt.UUID `json:"pkStockId,omitempty"`
}

// Validate validates this linked item
func (m *LinkedItem) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePkStockID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LinkedItem) validatePkStockID(formats strfmt.Registry) error {
	if swag.IsZero(m.PkStockID) { // not required
		return nil
	}

	if err := validate.FormatOf("pkStockId", "body", "uuid", m.PkStockID.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this linked item based on context it is used
func (m *LinkedItem) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *LinkedItem) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LinkedItem) UnmarshalBinary(b []byte) error {
	var res LinkedItem
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
