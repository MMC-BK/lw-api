// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CalcBinItem Class represents order item in the bin
//
// swagger:model CalcBinItem
type CalcBinItem struct {

	// Package Id
	// Example: 00000000-0000-0000-0000-000000000000
	// Format: uuid
	BinID strfmt.UUID `json:"BinId,omitempty"`

	// Item Part Id
	BoxID int32 `json:"BoxId,omitempty"`

	// quantity
	Quantity int32 `json:"Quantity,omitempty"`

	// Bin Item Id
	ShippingOrderItemID int32 `json:"ShippingOrderItemId,omitempty"`

	// Order Item Id
	// Example: 00000000-0000-0000-0000-000000000000
	// Format: uuid
	FkOrderItemID strfmt.UUID `json:"fkOrderItemId,omitempty"`
}

// Validate validates this calc bin item
func (m *CalcBinItem) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBinID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFkOrderItemID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CalcBinItem) validateBinID(formats strfmt.Registry) error {
	if swag.IsZero(m.BinID) { // not required
		return nil
	}

	if err := validate.FormatOf("BinId", "body", "uuid", m.BinID.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *CalcBinItem) validateFkOrderItemID(formats strfmt.Registry) error {
	if swag.IsZero(m.FkOrderItemID) { // not required
		return nil
	}

	if err := validate.FormatOf("fkOrderItemId", "body", "uuid", m.FkOrderItemID.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this calc bin item based on context it is used
func (m *CalcBinItem) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CalcBinItem) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CalcBinItem) UnmarshalBinary(b []byte) error {
	var res CalcBinItem
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
