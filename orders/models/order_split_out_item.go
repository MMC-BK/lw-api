// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// OrderSplitOutItem order split out item
//
// swagger:model OrderSplitOutItem
type OrderSplitOutItem struct {

	// quantity
	Quantity int32 `json:"Quantity,omitempty"`

	// row Id
	// Example: 00000000-0000-0000-0000-000000000000
	// Format: uuid
	RowID strfmt.UUID `json:"RowId,omitempty"`

	// unit cost
	UnitCost float64 `json:"UnitCost,omitempty"`

	// weight
	Weight float64 `json:"Weight,omitempty"`
}

// Validate validates this order split out item
func (m *OrderSplitOutItem) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRowID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OrderSplitOutItem) validateRowID(formats strfmt.Registry) error {
	if swag.IsZero(m.RowID) { // not required
		return nil
	}

	if err := validate.FormatOf("RowId", "body", "uuid", m.RowID.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this order split out item based on context it is used
func (m *OrderSplitOutItem) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OrderSplitOutItem) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OrderSplitOutItem) UnmarshalBinary(b []byte) error {
	var res OrderSplitOutItem
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
