// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// OrderNote order note
//
// swagger:model OrderNote
type OrderNote struct {

	// User that created note
	CreatedBy string `json:"CreatedBy,omitempty"`

	// order note type (Internal or External)
	Internal bool `json:"Internal,omitempty"`

	// Note's text
	Note string `json:"Note,omitempty"`

	// Date and time when note was added
	// Format: date-time
	NoteDate strfmt.DateTime `json:"NoteDate,omitempty"`

	// note type Id
	NoteTypeID int32 `json:"NoteTypeId,omitempty"`

	// Order Id
	// Example: 00000000-0000-0000-0000-000000000000
	// Format: uuid
	OrderID strfmt.UUID `json:"OrderId,omitempty"`

	// Order note ID
	// Example: 00000000-0000-0000-0000-000000000000
	// Format: uuid
	OrderNoteID strfmt.UUID `json:"OrderNoteId,omitempty"`
}

// Validate validates this order note
func (m *OrderNote) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateNoteDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOrderID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOrderNoteID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OrderNote) validateNoteDate(formats strfmt.Registry) error {
	if swag.IsZero(m.NoteDate) { // not required
		return nil
	}

	if err := validate.FormatOf("NoteDate", "body", "date-time", m.NoteDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *OrderNote) validateOrderID(formats strfmt.Registry) error {
	if swag.IsZero(m.OrderID) { // not required
		return nil
	}

	if err := validate.FormatOf("OrderId", "body", "uuid", m.OrderID.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *OrderNote) validateOrderNoteID(formats strfmt.Registry) error {
	if swag.IsZero(m.OrderNoteID) { // not required
		return nil
	}

	if err := validate.FormatOf("OrderNoteId", "body", "uuid", m.OrderNoteID.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this order note based on context it is used
func (m *OrderNote) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OrderNote) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OrderNote) UnmarshalBinary(b []byte) error {
	var res OrderNote
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
