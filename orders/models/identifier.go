// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Identifier identifier
//
// swagger:model Identifier
type Identifier struct {

	// Internal identifier id. Use to update image and name.
	IdentifierID int32 `json:"IdentifierId,omitempty"`

	// image Id
	// Example: 00000000-0000-0000-0000-000000000000
	// Format: uuid
	ImageID strfmt.UUID `json:"ImageId,omitempty"`

	// image Url
	ImageURL string `json:"ImageUrl,omitempty"`

	// Is the tag user or system defined?
	IsCustom bool `json:"IsCustom,omitempty"`

	// Name displayed where the tag is used
	Name string `json:"Name,omitempty"`

	// Internal tag for identification purposes
	Tag string `json:"Tag,omitempty"`
}

// Validate validates this identifier
func (m *Identifier) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateImageID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Identifier) validateImageID(formats strfmt.Registry) error {
	if swag.IsZero(m.ImageID) { // not required
		return nil
	}

	if err := validate.FormatOf("ImageId", "body", "uuid", m.ImageID.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this identifier based on context it is used
func (m *Identifier) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Identifier) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Identifier) UnmarshalBinary(b []byte) error {
	var res Identifier
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
