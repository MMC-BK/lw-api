// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// OrdersMergeOrdersRequest orders merge orders request
//
// swagger:model Orders_MergeOrdersRequest
type OrdersMergeOrdersRequest struct {

	// Current fulfilment center
	// Example: 00000000-0000-0000-0000-000000000000
	// Format: uuid
	FulfilmentCenter strfmt.UUID `json:"fulfilmentCenter,omitempty"`

	// Orders to merge
	OrdersToMerge []strfmt.UUID `json:"ordersToMerge"`

	// Postal service id
	// Example: 00000000-0000-0000-0000-000000000000
	// Format: uuid
	PkPostalServiceID strfmt.UUID `json:"pkPostalServiceId,omitempty"`
}

// Validate validates this orders merge orders request
func (m *OrdersMergeOrdersRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFulfilmentCenter(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOrdersToMerge(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePkPostalServiceID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OrdersMergeOrdersRequest) validateFulfilmentCenter(formats strfmt.Registry) error {
	if swag.IsZero(m.FulfilmentCenter) { // not required
		return nil
	}

	if err := validate.FormatOf("fulfilmentCenter", "body", "uuid", m.FulfilmentCenter.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *OrdersMergeOrdersRequest) validateOrdersToMerge(formats strfmt.Registry) error {
	if swag.IsZero(m.OrdersToMerge) { // not required
		return nil
	}

	for i := 0; i < len(m.OrdersToMerge); i++ {

		if err := validate.FormatOf("ordersToMerge"+"."+strconv.Itoa(i), "body", "uuid", m.OrdersToMerge[i].String(), formats); err != nil {
			return err
		}

	}

	return nil
}

func (m *OrdersMergeOrdersRequest) validatePkPostalServiceID(formats strfmt.Registry) error {
	if swag.IsZero(m.PkPostalServiceID) { // not required
		return nil
	}

	if err := validate.FormatOf("pkPostalServiceId", "body", "uuid", m.PkPostalServiceID.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this orders merge orders request based on context it is used
func (m *OrdersMergeOrdersRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OrdersMergeOrdersRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OrdersMergeOrdersRequest) UnmarshalBinary(b []byte) error {
	var res OrdersMergeOrdersRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
