// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RefundScreenOptions refund screen options
//
// swagger:model RefundScreenOptions
type RefundScreenOptions struct {

	// If shipping can be refunded
	CanRefundShipping bool `json:"CanRefundShipping,omitempty"`

	// Information about channel refund functionality
	// Enum: ["OK","ChannelRefundFunctionalityNotImplemented","ChannelRefundsDisabled","NotAllowed"]
	FreeTextOption string `json:"FreeTextOption,omitempty"`

	// AIf order service refund autoamted
	IsServiceRefundAutomated bool `json:"IsServiceRefundAutomated,omitempty"`

	// If order shipping cost refund automated
	IsShippingRefundAutomated bool `json:"IsShippingRefundAutomated,omitempty"`

	// If order got service items
	OrderHasServiceItems bool `json:"OrderHasServiceItems,omitempty"`

	// If automated refund is supported
	SupportsAutomatedRefunds bool `json:"SupportsAutomatedRefunds,omitempty"`
}

// Validate validates this refund screen options
func (m *RefundScreenOptions) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFreeTextOption(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var refundScreenOptionsTypeFreeTextOptionPropEnum []any

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["OK","ChannelRefundFunctionalityNotImplemented","ChannelRefundsDisabled","NotAllowed"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		refundScreenOptionsTypeFreeTextOptionPropEnum = append(refundScreenOptionsTypeFreeTextOptionPropEnum, v)
	}
}

const (

	// RefundScreenOptionsFreeTextOptionOK captures enum value "OK"
	RefundScreenOptionsFreeTextOptionOK string = "OK"

	// RefundScreenOptionsFreeTextOptionChannelRefundFunctionalityNotImplemented captures enum value "ChannelRefundFunctionalityNotImplemented"
	RefundScreenOptionsFreeTextOptionChannelRefundFunctionalityNotImplemented string = "ChannelRefundFunctionalityNotImplemented"

	// RefundScreenOptionsFreeTextOptionChannelRefundsDisabled captures enum value "ChannelRefundsDisabled"
	RefundScreenOptionsFreeTextOptionChannelRefundsDisabled string = "ChannelRefundsDisabled"

	// RefundScreenOptionsFreeTextOptionNotAllowed captures enum value "NotAllowed"
	RefundScreenOptionsFreeTextOptionNotAllowed string = "NotAllowed"
)

// prop value enum
func (m *RefundScreenOptions) validateFreeTextOptionEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, refundScreenOptionsTypeFreeTextOptionPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *RefundScreenOptions) validateFreeTextOption(formats strfmt.Registry) error {
	if swag.IsZero(m.FreeTextOption) { // not required
		return nil
	}

	// value enum
	if err := m.validateFreeTextOptionEnum("FreeTextOption", "body", m.FreeTextOption); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this refund screen options based on context it is used
func (m *RefundScreenOptions) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *RefundScreenOptions) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RefundScreenOptions) UnmarshalBinary(b []byte) error {
	var res RefundScreenOptions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
