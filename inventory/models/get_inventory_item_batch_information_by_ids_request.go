// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetInventoryItemBatchInformationByIdsRequest get inventory item batch information by ids request
//
// swagger:model GetInventoryItemBatchInformationByIdsRequest
type GetInventoryItemBatchInformationByIdsRequest struct {

	// Defines whether we should only return available items
	AvailableOnly bool `json:"AvailableOnly,omitempty"`

	// A list of stock item ids
	StockItemIds []strfmt.UUID `json:"StockItemIds"`

	// The location to get the batch information from
	// Example: 00000000-0000-0000-0000-000000000000
	// Format: uuid
	StockLocationID strfmt.UUID `json:"StockLocationId,omitempty"`
}

// Validate validates this get inventory item batch information by ids request
func (m *GetInventoryItemBatchInformationByIdsRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStockItemIds(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStockLocationID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetInventoryItemBatchInformationByIdsRequest) validateStockItemIds(formats strfmt.Registry) error {
	if swag.IsZero(m.StockItemIds) { // not required
		return nil
	}

	for i := 0; i < len(m.StockItemIds); i++ {

		if err := validate.FormatOf("StockItemIds"+"."+strconv.Itoa(i), "body", "uuid", m.StockItemIds[i].String(), formats); err != nil {
			return err
		}

	}

	return nil
}

func (m *GetInventoryItemBatchInformationByIdsRequest) validateStockLocationID(formats strfmt.Registry) error {
	if swag.IsZero(m.StockLocationID) { // not required
		return nil
	}

	if err := validate.FormatOf("StockLocationId", "body", "uuid", m.StockLocationID.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get inventory item batch information by ids request based on context it is used
func (m *GetInventoryItemBatchInformationByIdsRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GetInventoryItemBatchInformationByIdsRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetInventoryItemBatchInformationByIdsRequest) UnmarshalBinary(b []byte) error {
	var res GetInventoryItemBatchInformationByIdsRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
