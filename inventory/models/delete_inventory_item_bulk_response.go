// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DeleteInventoryItemBulkResponse delete inventory item bulk response
//
// swagger:model DeleteInventoryItemBulkResponse
type DeleteInventoryItemBulkResponse struct {

	// The Id for the stock item. Always provided unless not found
	// Example: 00000000-0000-0000-0000-000000000000
	// Format: uuid
	InventoryItemID strfmt.UUID `json:"InventoryItemId,omitempty"`

	// The ItemNumber (SKU) for the stock item. Only provided if passed in the request
	ItemNumber string `json:"ItemNumber,omitempty"`
}

// Validate validates this delete inventory item bulk response
func (m *DeleteInventoryItemBulkResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateInventoryItemID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DeleteInventoryItemBulkResponse) validateInventoryItemID(formats strfmt.Registry) error {
	if swag.IsZero(m.InventoryItemID) { // not required
		return nil
	}

	if err := validate.FormatOf("InventoryItemId", "body", "uuid", m.InventoryItemID.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this delete inventory item bulk response based on context it is used
func (m *DeleteInventoryItemBulkResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DeleteInventoryItemBulkResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DeleteInventoryItemBulkResponse) UnmarshalBinary(b []byte) error {
	var res DeleteInventoryItemBulkResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
