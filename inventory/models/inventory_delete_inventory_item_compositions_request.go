// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// InventoryDeleteInventoryItemCompositionsRequest inventory delete inventory item compositions request
//
// swagger:model Inventory_DeleteInventoryItemCompositionsRequest
type InventoryDeleteInventoryItemCompositionsRequest struct {

	// stockItem composition ids
	InventoryItemCompositionIds []strfmt.UUID `json:"inventoryItemCompositionIds"`

	// Id of StockItem
	// Example: 00000000-0000-0000-0000-000000000000
	// Format: uuid
	StockItemID strfmt.UUID `json:"stockItemId,omitempty"`
}

// Validate validates this inventory delete inventory item compositions request
func (m *InventoryDeleteInventoryItemCompositionsRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateInventoryItemCompositionIds(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStockItemID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *InventoryDeleteInventoryItemCompositionsRequest) validateInventoryItemCompositionIds(formats strfmt.Registry) error {
	if swag.IsZero(m.InventoryItemCompositionIds) { // not required
		return nil
	}

	for i := 0; i < len(m.InventoryItemCompositionIds); i++ {

		if err := validate.FormatOf("inventoryItemCompositionIds"+"."+strconv.Itoa(i), "body", "uuid", m.InventoryItemCompositionIds[i].String(), formats); err != nil {
			return err
		}

	}

	return nil
}

func (m *InventoryDeleteInventoryItemCompositionsRequest) validateStockItemID(formats strfmt.Registry) error {
	if swag.IsZero(m.StockItemID) { // not required
		return nil
	}

	if err := validate.FormatOf("stockItemId", "body", "uuid", m.StockItemID.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this inventory delete inventory item compositions request based on context it is used
func (m *InventoryDeleteInventoryItemCompositionsRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *InventoryDeleteInventoryItemCompositionsRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InventoryDeleteInventoryItemCompositionsRequest) UnmarshalBinary(b []byte) error {
	var res InventoryDeleteInventoryItemCompositionsRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
