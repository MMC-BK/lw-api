// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AdjustmentOptions adjustment options
//
// swagger:model AdjustmentOptions
type AdjustmentOptions struct {

	// If product extended properties needs to be added
	AddExtendedProperties bool `json:"AddExtendedProperties,omitempty"`

	// Adjusts multi-warehouse settings for the template.
	AdjustMultiWarehouseSettings bool `json:"AdjustMultiWarehouseSettings,omitempty"`

	// Product description
	Description bool `json:"Description,omitempty"`

	// Product price
	Price bool `json:"Price,omitempty"`

	// Reload all images for the template
	ReloadAllImages bool `json:"ReloadAllImages,omitempty"`

	// Removes old attributes
	RemoveOldAttributes bool `json:"RemoveOldAttributes,omitempty"`

	// Revise product extended properties
	ReviseExtendedProperties bool `json:"ReviseExtendedProperties,omitempty"`

	// Product title
	Title bool `json:"Title,omitempty"`

	// Update product images
	UpdateImages bool `json:"UpdateImages,omitempty"`

	// Product variation attributes
	VariationAttributes bool `json:"VariationAttributes,omitempty"`
}

// Validate validates this adjustment options
func (m *AdjustmentOptions) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this adjustment options based on context it is used
func (m *AdjustmentOptions) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AdjustmentOptions) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AdjustmentOptions) UnmarshalBinary(b []byte) error {
	var res AdjustmentOptions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
