// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// InventoryUpdateInventoryItemLocationFieldRequest inventory update inventory item location field request
//
// swagger:model Inventory_UpdateInventoryItemLocationFieldRequest
type InventoryUpdateInventoryItemLocationFieldRequest struct {

	// change source
	ChangeSource string `json:"changeSource,omitempty"`

	// Name of field updated
	// Enum: ["SKU","Title","VariationGroupName","RetailPrice","PurchasePrice","Tracked","Barcode","Available","MinimumLevel","InOrder","StockLevel","StockValue","Due","BinRack","Category","Image","Weight","DimHeight","DimWidth","DimDepth","CreatedDate","ModifiedDate","SerialNumberScanRequired","BatchNumberScanRequired","BatchType","JIT","ReorderAmount","ReorderDate","AverageConsumption","DefaultSupplier"]
	FieldName string `json:"fieldName,omitempty"`

	// Input value
	FieldValue string `json:"fieldValue,omitempty"`

	// Stock Item Id
	// Example: 00000000-0000-0000-0000-000000000000
	// Format: uuid
	InventoryItemID strfmt.UUID `json:"inventoryItemId,omitempty"`

	// Location Id
	// Example: 00000000-0000-0000-0000-000000000000
	// Format: uuid
	LocationID strfmt.UUID `json:"locationId,omitempty"`
}

// Validate validates this inventory update inventory item location field request
func (m *InventoryUpdateInventoryItemLocationFieldRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFieldName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateInventoryItemID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLocationID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var inventoryUpdateInventoryItemLocationFieldRequestTypeFieldNamePropEnum []any

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["SKU","Title","VariationGroupName","RetailPrice","PurchasePrice","Tracked","Barcode","Available","MinimumLevel","InOrder","StockLevel","StockValue","Due","BinRack","Category","Image","Weight","DimHeight","DimWidth","DimDepth","CreatedDate","ModifiedDate","SerialNumberScanRequired","BatchNumberScanRequired","BatchType","JIT","ReorderAmount","ReorderDate","AverageConsumption","DefaultSupplier"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		inventoryUpdateInventoryItemLocationFieldRequestTypeFieldNamePropEnum = append(inventoryUpdateInventoryItemLocationFieldRequestTypeFieldNamePropEnum, v)
	}
}

const (

	// InventoryUpdateInventoryItemLocationFieldRequestFieldNameSKU captures enum value "SKU"
	InventoryUpdateInventoryItemLocationFieldRequestFieldNameSKU string = "SKU"

	// InventoryUpdateInventoryItemLocationFieldRequestFieldNameTitle captures enum value "Title"
	InventoryUpdateInventoryItemLocationFieldRequestFieldNameTitle string = "Title"

	// InventoryUpdateInventoryItemLocationFieldRequestFieldNameVariationGroupName captures enum value "VariationGroupName"
	InventoryUpdateInventoryItemLocationFieldRequestFieldNameVariationGroupName string = "VariationGroupName"

	// InventoryUpdateInventoryItemLocationFieldRequestFieldNameRetailPrice captures enum value "RetailPrice"
	InventoryUpdateInventoryItemLocationFieldRequestFieldNameRetailPrice string = "RetailPrice"

	// InventoryUpdateInventoryItemLocationFieldRequestFieldNamePurchasePrice captures enum value "PurchasePrice"
	InventoryUpdateInventoryItemLocationFieldRequestFieldNamePurchasePrice string = "PurchasePrice"

	// InventoryUpdateInventoryItemLocationFieldRequestFieldNameTracked captures enum value "Tracked"
	InventoryUpdateInventoryItemLocationFieldRequestFieldNameTracked string = "Tracked"

	// InventoryUpdateInventoryItemLocationFieldRequestFieldNameBarcode captures enum value "Barcode"
	InventoryUpdateInventoryItemLocationFieldRequestFieldNameBarcode string = "Barcode"

	// InventoryUpdateInventoryItemLocationFieldRequestFieldNameAvailable captures enum value "Available"
	InventoryUpdateInventoryItemLocationFieldRequestFieldNameAvailable string = "Available"

	// InventoryUpdateInventoryItemLocationFieldRequestFieldNameMinimumLevel captures enum value "MinimumLevel"
	InventoryUpdateInventoryItemLocationFieldRequestFieldNameMinimumLevel string = "MinimumLevel"

	// InventoryUpdateInventoryItemLocationFieldRequestFieldNameInOrder captures enum value "InOrder"
	InventoryUpdateInventoryItemLocationFieldRequestFieldNameInOrder string = "InOrder"

	// InventoryUpdateInventoryItemLocationFieldRequestFieldNameStockLevel captures enum value "StockLevel"
	InventoryUpdateInventoryItemLocationFieldRequestFieldNameStockLevel string = "StockLevel"

	// InventoryUpdateInventoryItemLocationFieldRequestFieldNameStockValue captures enum value "StockValue"
	InventoryUpdateInventoryItemLocationFieldRequestFieldNameStockValue string = "StockValue"

	// InventoryUpdateInventoryItemLocationFieldRequestFieldNameDue captures enum value "Due"
	InventoryUpdateInventoryItemLocationFieldRequestFieldNameDue string = "Due"

	// InventoryUpdateInventoryItemLocationFieldRequestFieldNameBinRack captures enum value "BinRack"
	InventoryUpdateInventoryItemLocationFieldRequestFieldNameBinRack string = "BinRack"

	// InventoryUpdateInventoryItemLocationFieldRequestFieldNameCategory captures enum value "Category"
	InventoryUpdateInventoryItemLocationFieldRequestFieldNameCategory string = "Category"

	// InventoryUpdateInventoryItemLocationFieldRequestFieldNameImage captures enum value "Image"
	InventoryUpdateInventoryItemLocationFieldRequestFieldNameImage string = "Image"

	// InventoryUpdateInventoryItemLocationFieldRequestFieldNameWeight captures enum value "Weight"
	InventoryUpdateInventoryItemLocationFieldRequestFieldNameWeight string = "Weight"

	// InventoryUpdateInventoryItemLocationFieldRequestFieldNameDimHeight captures enum value "DimHeight"
	InventoryUpdateInventoryItemLocationFieldRequestFieldNameDimHeight string = "DimHeight"

	// InventoryUpdateInventoryItemLocationFieldRequestFieldNameDimWidth captures enum value "DimWidth"
	InventoryUpdateInventoryItemLocationFieldRequestFieldNameDimWidth string = "DimWidth"

	// InventoryUpdateInventoryItemLocationFieldRequestFieldNameDimDepth captures enum value "DimDepth"
	InventoryUpdateInventoryItemLocationFieldRequestFieldNameDimDepth string = "DimDepth"

	// InventoryUpdateInventoryItemLocationFieldRequestFieldNameCreatedDate captures enum value "CreatedDate"
	InventoryUpdateInventoryItemLocationFieldRequestFieldNameCreatedDate string = "CreatedDate"

	// InventoryUpdateInventoryItemLocationFieldRequestFieldNameModifiedDate captures enum value "ModifiedDate"
	InventoryUpdateInventoryItemLocationFieldRequestFieldNameModifiedDate string = "ModifiedDate"

	// InventoryUpdateInventoryItemLocationFieldRequestFieldNameSerialNumberScanRequired captures enum value "SerialNumberScanRequired"
	InventoryUpdateInventoryItemLocationFieldRequestFieldNameSerialNumberScanRequired string = "SerialNumberScanRequired"

	// InventoryUpdateInventoryItemLocationFieldRequestFieldNameBatchNumberScanRequired captures enum value "BatchNumberScanRequired"
	InventoryUpdateInventoryItemLocationFieldRequestFieldNameBatchNumberScanRequired string = "BatchNumberScanRequired"

	// InventoryUpdateInventoryItemLocationFieldRequestFieldNameBatchType captures enum value "BatchType"
	InventoryUpdateInventoryItemLocationFieldRequestFieldNameBatchType string = "BatchType"

	// InventoryUpdateInventoryItemLocationFieldRequestFieldNameJIT captures enum value "JIT"
	InventoryUpdateInventoryItemLocationFieldRequestFieldNameJIT string = "JIT"

	// InventoryUpdateInventoryItemLocationFieldRequestFieldNameReorderAmount captures enum value "ReorderAmount"
	InventoryUpdateInventoryItemLocationFieldRequestFieldNameReorderAmount string = "ReorderAmount"

	// InventoryUpdateInventoryItemLocationFieldRequestFieldNameReorderDate captures enum value "ReorderDate"
	InventoryUpdateInventoryItemLocationFieldRequestFieldNameReorderDate string = "ReorderDate"

	// InventoryUpdateInventoryItemLocationFieldRequestFieldNameAverageConsumption captures enum value "AverageConsumption"
	InventoryUpdateInventoryItemLocationFieldRequestFieldNameAverageConsumption string = "AverageConsumption"

	// InventoryUpdateInventoryItemLocationFieldRequestFieldNameDefaultSupplier captures enum value "DefaultSupplier"
	InventoryUpdateInventoryItemLocationFieldRequestFieldNameDefaultSupplier string = "DefaultSupplier"
)

// prop value enum
func (m *InventoryUpdateInventoryItemLocationFieldRequest) validateFieldNameEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, inventoryUpdateInventoryItemLocationFieldRequestTypeFieldNamePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *InventoryUpdateInventoryItemLocationFieldRequest) validateFieldName(formats strfmt.Registry) error {
	if swag.IsZero(m.FieldName) { // not required
		return nil
	}

	// value enum
	if err := m.validateFieldNameEnum("fieldName", "body", m.FieldName); err != nil {
		return err
	}

	return nil
}

func (m *InventoryUpdateInventoryItemLocationFieldRequest) validateInventoryItemID(formats strfmt.Registry) error {
	if swag.IsZero(m.InventoryItemID) { // not required
		return nil
	}

	if err := validate.FormatOf("inventoryItemId", "body", "uuid", m.InventoryItemID.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *InventoryUpdateInventoryItemLocationFieldRequest) validateLocationID(formats strfmt.Registry) error {
	if swag.IsZero(m.LocationID) { // not required
		return nil
	}

	if err := validate.FormatOf("locationId", "body", "uuid", m.LocationID.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this inventory update inventory item location field request based on context it is used
func (m *InventoryUpdateInventoryItemLocationFieldRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *InventoryUpdateInventoryItemLocationFieldRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InventoryUpdateInventoryItemLocationFieldRequest) UnmarshalBinary(b []byte) error {
	var res InventoryUpdateInventoryItemLocationFieldRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
