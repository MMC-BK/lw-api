// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ConfigStockLocation config stock location
//
// swagger:model ConfigStockLocation
type ConfigStockLocation struct {

	// deleted
	Deleted bool `json:"Deleted,omitempty"`

	// fk channel location Id
	FkChannelLocationID int32 `json:"fkChannelLocationId,omitempty"`

	// pk stock location Id
	// Example: 00000000-0000-0000-0000-000000000000
	// Format: uuid
	PkStockLocationID strfmt.UUID `json:"pkStockLocationId,omitempty"`
}

// Validate validates this config stock location
func (m *ConfigStockLocation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePkStockLocationID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ConfigStockLocation) validatePkStockLocationID(formats strfmt.Registry) error {
	if swag.IsZero(m.PkStockLocationID) { // not required
		return nil
	}

	if err := validate.FormatOf("pkStockLocationId", "body", "uuid", m.PkStockLocationID.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this config stock location based on context it is used
func (m *ConfigStockLocation) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ConfigStockLocation) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ConfigStockLocation) UnmarshalBinary(b []byte) error {
	var res ConfigStockLocation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
