// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// InventoryUpdateInventoryItemFieldRequest inventory update inventory item field request
//
// swagger:model Inventory_UpdateInventoryItemFieldRequest
type InventoryUpdateInventoryItemFieldRequest struct {

	// field name
	// Enum: ["SKU","Title","VariationGroupName","RetailPrice","PurchasePrice","Tracked","Barcode","Available","MinimumLevel","InOrder","StockLevel","StockValue","Due","BinRack","Category","Image","Weight","DimHeight","DimWidth","DimDepth","CreatedDate","ModifiedDate","SerialNumberScanRequired","BatchNumberScanRequired","BatchType","JIT","ReorderAmount","ReorderDate","AverageConsumption","DefaultSupplier"]
	FieldName string `json:"fieldName,omitempty"`

	// field value
	FieldValue string `json:"fieldValue,omitempty"`

	// inventory item Id
	// Example: 00000000-0000-0000-0000-000000000000
	// Format: uuid
	InventoryItemID strfmt.UUID `json:"inventoryItemId,omitempty"`
}

// Validate validates this inventory update inventory item field request
func (m *InventoryUpdateInventoryItemFieldRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFieldName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateInventoryItemID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var inventoryUpdateInventoryItemFieldRequestTypeFieldNamePropEnum []any

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["SKU","Title","VariationGroupName","RetailPrice","PurchasePrice","Tracked","Barcode","Available","MinimumLevel","InOrder","StockLevel","StockValue","Due","BinRack","Category","Image","Weight","DimHeight","DimWidth","DimDepth","CreatedDate","ModifiedDate","SerialNumberScanRequired","BatchNumberScanRequired","BatchType","JIT","ReorderAmount","ReorderDate","AverageConsumption","DefaultSupplier"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		inventoryUpdateInventoryItemFieldRequestTypeFieldNamePropEnum = append(inventoryUpdateInventoryItemFieldRequestTypeFieldNamePropEnum, v)
	}
}

const (

	// InventoryUpdateInventoryItemFieldRequestFieldNameSKU captures enum value "SKU"
	InventoryUpdateInventoryItemFieldRequestFieldNameSKU string = "SKU"

	// InventoryUpdateInventoryItemFieldRequestFieldNameTitle captures enum value "Title"
	InventoryUpdateInventoryItemFieldRequestFieldNameTitle string = "Title"

	// InventoryUpdateInventoryItemFieldRequestFieldNameVariationGroupName captures enum value "VariationGroupName"
	InventoryUpdateInventoryItemFieldRequestFieldNameVariationGroupName string = "VariationGroupName"

	// InventoryUpdateInventoryItemFieldRequestFieldNameRetailPrice captures enum value "RetailPrice"
	InventoryUpdateInventoryItemFieldRequestFieldNameRetailPrice string = "RetailPrice"

	// InventoryUpdateInventoryItemFieldRequestFieldNamePurchasePrice captures enum value "PurchasePrice"
	InventoryUpdateInventoryItemFieldRequestFieldNamePurchasePrice string = "PurchasePrice"

	// InventoryUpdateInventoryItemFieldRequestFieldNameTracked captures enum value "Tracked"
	InventoryUpdateInventoryItemFieldRequestFieldNameTracked string = "Tracked"

	// InventoryUpdateInventoryItemFieldRequestFieldNameBarcode captures enum value "Barcode"
	InventoryUpdateInventoryItemFieldRequestFieldNameBarcode string = "Barcode"

	// InventoryUpdateInventoryItemFieldRequestFieldNameAvailable captures enum value "Available"
	InventoryUpdateInventoryItemFieldRequestFieldNameAvailable string = "Available"

	// InventoryUpdateInventoryItemFieldRequestFieldNameMinimumLevel captures enum value "MinimumLevel"
	InventoryUpdateInventoryItemFieldRequestFieldNameMinimumLevel string = "MinimumLevel"

	// InventoryUpdateInventoryItemFieldRequestFieldNameInOrder captures enum value "InOrder"
	InventoryUpdateInventoryItemFieldRequestFieldNameInOrder string = "InOrder"

	// InventoryUpdateInventoryItemFieldRequestFieldNameStockLevel captures enum value "StockLevel"
	InventoryUpdateInventoryItemFieldRequestFieldNameStockLevel string = "StockLevel"

	// InventoryUpdateInventoryItemFieldRequestFieldNameStockValue captures enum value "StockValue"
	InventoryUpdateInventoryItemFieldRequestFieldNameStockValue string = "StockValue"

	// InventoryUpdateInventoryItemFieldRequestFieldNameDue captures enum value "Due"
	InventoryUpdateInventoryItemFieldRequestFieldNameDue string = "Due"

	// InventoryUpdateInventoryItemFieldRequestFieldNameBinRack captures enum value "BinRack"
	InventoryUpdateInventoryItemFieldRequestFieldNameBinRack string = "BinRack"

	// InventoryUpdateInventoryItemFieldRequestFieldNameCategory captures enum value "Category"
	InventoryUpdateInventoryItemFieldRequestFieldNameCategory string = "Category"

	// InventoryUpdateInventoryItemFieldRequestFieldNameImage captures enum value "Image"
	InventoryUpdateInventoryItemFieldRequestFieldNameImage string = "Image"

	// InventoryUpdateInventoryItemFieldRequestFieldNameWeight captures enum value "Weight"
	InventoryUpdateInventoryItemFieldRequestFieldNameWeight string = "Weight"

	// InventoryUpdateInventoryItemFieldRequestFieldNameDimHeight captures enum value "DimHeight"
	InventoryUpdateInventoryItemFieldRequestFieldNameDimHeight string = "DimHeight"

	// InventoryUpdateInventoryItemFieldRequestFieldNameDimWidth captures enum value "DimWidth"
	InventoryUpdateInventoryItemFieldRequestFieldNameDimWidth string = "DimWidth"

	// InventoryUpdateInventoryItemFieldRequestFieldNameDimDepth captures enum value "DimDepth"
	InventoryUpdateInventoryItemFieldRequestFieldNameDimDepth string = "DimDepth"

	// InventoryUpdateInventoryItemFieldRequestFieldNameCreatedDate captures enum value "CreatedDate"
	InventoryUpdateInventoryItemFieldRequestFieldNameCreatedDate string = "CreatedDate"

	// InventoryUpdateInventoryItemFieldRequestFieldNameModifiedDate captures enum value "ModifiedDate"
	InventoryUpdateInventoryItemFieldRequestFieldNameModifiedDate string = "ModifiedDate"

	// InventoryUpdateInventoryItemFieldRequestFieldNameSerialNumberScanRequired captures enum value "SerialNumberScanRequired"
	InventoryUpdateInventoryItemFieldRequestFieldNameSerialNumberScanRequired string = "SerialNumberScanRequired"

	// InventoryUpdateInventoryItemFieldRequestFieldNameBatchNumberScanRequired captures enum value "BatchNumberScanRequired"
	InventoryUpdateInventoryItemFieldRequestFieldNameBatchNumberScanRequired string = "BatchNumberScanRequired"

	// InventoryUpdateInventoryItemFieldRequestFieldNameBatchType captures enum value "BatchType"
	InventoryUpdateInventoryItemFieldRequestFieldNameBatchType string = "BatchType"

	// InventoryUpdateInventoryItemFieldRequestFieldNameJIT captures enum value "JIT"
	InventoryUpdateInventoryItemFieldRequestFieldNameJIT string = "JIT"

	// InventoryUpdateInventoryItemFieldRequestFieldNameReorderAmount captures enum value "ReorderAmount"
	InventoryUpdateInventoryItemFieldRequestFieldNameReorderAmount string = "ReorderAmount"

	// InventoryUpdateInventoryItemFieldRequestFieldNameReorderDate captures enum value "ReorderDate"
	InventoryUpdateInventoryItemFieldRequestFieldNameReorderDate string = "ReorderDate"

	// InventoryUpdateInventoryItemFieldRequestFieldNameAverageConsumption captures enum value "AverageConsumption"
	InventoryUpdateInventoryItemFieldRequestFieldNameAverageConsumption string = "AverageConsumption"

	// InventoryUpdateInventoryItemFieldRequestFieldNameDefaultSupplier captures enum value "DefaultSupplier"
	InventoryUpdateInventoryItemFieldRequestFieldNameDefaultSupplier string = "DefaultSupplier"
)

// prop value enum
func (m *InventoryUpdateInventoryItemFieldRequest) validateFieldNameEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, inventoryUpdateInventoryItemFieldRequestTypeFieldNamePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *InventoryUpdateInventoryItemFieldRequest) validateFieldName(formats strfmt.Registry) error {
	if swag.IsZero(m.FieldName) { // not required
		return nil
	}

	// value enum
	if err := m.validateFieldNameEnum("fieldName", "body", m.FieldName); err != nil {
		return err
	}

	return nil
}

func (m *InventoryUpdateInventoryItemFieldRequest) validateInventoryItemID(formats strfmt.Registry) error {
	if swag.IsZero(m.InventoryItemID) { // not required
		return nil
	}

	if err := validate.FormatOf("inventoryItemId", "body", "uuid", m.InventoryItemID.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this inventory update inventory item field request based on context it is used
func (m *InventoryUpdateInventoryItemFieldRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *InventoryUpdateInventoryItemFieldRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InventoryUpdateInventoryItemFieldRequest) UnmarshalBinary(b []byte) error {
	var res InventoryUpdateInventoryItemFieldRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
