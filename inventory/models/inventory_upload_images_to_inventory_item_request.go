// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// InventoryUploadImagesToInventoryItemRequest inventory upload images to inventory item request
//
// swagger:model Inventory_UploadImagesToInventoryItemRequest
type InventoryUploadImagesToInventoryItemRequest struct {

	// List of image Ids
	ImageIds []strfmt.UUID `json:"imageIds"`

	// Id of StockItem
	// Example: 00000000-0000-0000-0000-000000000000
	// Format: uuid
	InventoryItemID strfmt.UUID `json:"inventoryItemId,omitempty"`
}

// Validate validates this inventory upload images to inventory item request
func (m *InventoryUploadImagesToInventoryItemRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateImageIds(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateInventoryItemID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *InventoryUploadImagesToInventoryItemRequest) validateImageIds(formats strfmt.Registry) error {
	if swag.IsZero(m.ImageIds) { // not required
		return nil
	}

	for i := 0; i < len(m.ImageIds); i++ {

		if err := validate.FormatOf("imageIds"+"."+strconv.Itoa(i), "body", "uuid", m.ImageIds[i].String(), formats); err != nil {
			return err
		}

	}

	return nil
}

func (m *InventoryUploadImagesToInventoryItemRequest) validateInventoryItemID(formats strfmt.Registry) error {
	if swag.IsZero(m.InventoryItemID) { // not required
		return nil
	}

	if err := validate.FormatOf("inventoryItemId", "body", "uuid", m.InventoryItemID.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this inventory upload images to inventory item request based on context it is used
func (m *InventoryUploadImagesToInventoryItemRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *InventoryUploadImagesToInventoryItemRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InventoryUploadImagesToInventoryItemRequest) UnmarshalBinary(b []byte) error {
	var res InventoryUploadImagesToInventoryItemRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
