// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TupleInt32Int32 tuple int32 int32
//
// swagger:model Tuple_Int32_Int32
type TupleInt32Int32 struct {

	// item1
	// Read Only: true
	Item1 int32 `json:"Item1,omitempty"`

	// item2
	// Read Only: true
	Item2 int32 `json:"Item2,omitempty"`
}

// Validate validates this tuple int32 int32
func (m *TupleInt32Int32) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validate this tuple int32 int32 based on the context it is used
func (m *TupleInt32Int32) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateItem1(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateItem2(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TupleInt32Int32) contextValidateItem1(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "Item1", "body", m.Item1); err != nil {
		return err
	}

	return nil
}

func (m *TupleInt32Int32) contextValidateItem2(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "Item2", "body", m.Item2); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TupleInt32Int32) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TupleInt32Int32) UnmarshalBinary(b []byte) error {
	var res TupleInt32Int32
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
