// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// APIResultResponseGUID API result response Guid
//
// swagger:model APIResultResponse_Guid
type APIResultResponseGUID struct {

	// message
	Message string `json:"Message,omitempty"`

	// result
	// Example: 00000000-0000-0000-0000-000000000000
	// Format: uuid
	Result strfmt.UUID `json:"Result,omitempty"`

	// result status
	// Enum: ["NOTSET","SUCCESSFUL","PARTIALLY_SUCCESSFUL","FAILED"]
	ResultStatus string `json:"ResultStatus,omitempty"`
}

// Validate validates this API result response Guid
func (m *APIResultResponseGUID) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateResult(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateResultStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *APIResultResponseGUID) validateResult(formats strfmt.Registry) error {
	if swag.IsZero(m.Result) { // not required
		return nil
	}

	if err := validate.FormatOf("Result", "body", "uuid", m.Result.String(), formats); err != nil {
		return err
	}

	return nil
}

var apiResultResponseGuidTypeResultStatusPropEnum []any

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["NOTSET","SUCCESSFUL","PARTIALLY_SUCCESSFUL","FAILED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		apiResultResponseGuidTypeResultStatusPropEnum = append(apiResultResponseGuidTypeResultStatusPropEnum, v)
	}
}

const (

	// APIResultResponseGUIDResultStatusNOTSET captures enum value "NOTSET"
	APIResultResponseGUIDResultStatusNOTSET string = "NOTSET"

	// APIResultResponseGUIDResultStatusSUCCESSFUL captures enum value "SUCCESSFUL"
	APIResultResponseGUIDResultStatusSUCCESSFUL string = "SUCCESSFUL"

	// APIResultResponseGUIDResultStatusPARTIALLYSUCCESSFUL captures enum value "PARTIALLY_SUCCESSFUL"
	APIResultResponseGUIDResultStatusPARTIALLYSUCCESSFUL string = "PARTIALLY_SUCCESSFUL"

	// APIResultResponseGUIDResultStatusFAILED captures enum value "FAILED"
	APIResultResponseGUIDResultStatusFAILED string = "FAILED"
)

// prop value enum
func (m *APIResultResponseGUID) validateResultStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, apiResultResponseGuidTypeResultStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *APIResultResponseGUID) validateResultStatus(formats strfmt.Registry) error {
	if swag.IsZero(m.ResultStatus) { // not required
		return nil
	}

	// value enum
	if err := m.validateResultStatusEnum("ResultStatus", "body", m.ResultStatus); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this API result response Guid based on context it is used
func (m *APIResultResponseGUID) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *APIResultResponseGUID) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *APIResultResponseGUID) UnmarshalBinary(b []byte) error {
	var res APIResultResponseGUID
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
