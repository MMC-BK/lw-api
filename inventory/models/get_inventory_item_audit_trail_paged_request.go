// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetInventoryItemAuditTrailPagedRequest get inventory item audit trail paged request
//
// swagger:model GetInventoryItemAuditTrailPagedRequest
type GetInventoryItemAuditTrailPagedRequest struct {

	// action
	Action string `json:"Action,omitempty"`

	// from date
	// Format: date-time
	FromDate strfmt.DateTime `json:"FromDate,omitempty"`

	// page number
	PageNumber int32 `json:"PageNumber,omitempty"`

	// page size
	PageSize int32 `json:"PageSize,omitempty"`

	// to date
	// Format: date-time
	ToDate strfmt.DateTime `json:"ToDate,omitempty"`
}

// Validate validates this get inventory item audit trail paged request
func (m *GetInventoryItemAuditTrailPagedRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFromDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateToDate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetInventoryItemAuditTrailPagedRequest) validateFromDate(formats strfmt.Registry) error {
	if swag.IsZero(m.FromDate) { // not required
		return nil
	}

	if err := validate.FormatOf("FromDate", "body", "date-time", m.FromDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *GetInventoryItemAuditTrailPagedRequest) validateToDate(formats strfmt.Registry) error {
	if swag.IsZero(m.ToDate) { // not required
		return nil
	}

	if err := validate.FormatOf("ToDate", "body", "date-time", m.ToDate.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get inventory item audit trail paged request based on context it is used
func (m *GetInventoryItemAuditTrailPagedRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GetInventoryItemAuditTrailPagedRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetInventoryItemAuditTrailPagedRequest) UnmarshalBinary(b []byte) error {
	var res GetInventoryItemAuditTrailPagedRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
